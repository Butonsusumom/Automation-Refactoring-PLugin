inspection.comparing.objects.references.display.name = Reference comparison used instead of content comparison
inspection.comparing.objects.references.problem.descriptor = 'Objects.equals()' ensures null-safe object comparison, avoiding NullPointerExceptions
inspection.comparing.objects.references.use.quickfix = Replace with 'Objects.equals()'

inspection.comparing.enums.references.display.name = Content comparison used instead of reference comparison
inspection.comparing.enums.references.problem.descriptor = Using '==' for enum comparison ensures type safety and efficient reference comparison, reflecting enums' nature as typesafe constants.
inspection.comparing.enums.references.use.quickfix = Replace with '=='

inspection.object.parameter.display.name = Unnecessary object parameter
inspection.object.parameter.problem.descriptor = Method can be refactored to accept only the property "{0}" as a parameter
inspection.object.parameter.use.quickfix = Replace object parameter with field parameter

inspection.test.method.name.display.name = Test method naming convention not followed
inspection.test.method.name.problem.descriptor =  Test names should follow the "{0}" format to describe the tested method.
inspection.test.method.name.use.quickfix = Rename test according to naming convention

inspection.scattered.functionality.display.name = Duplicated code across project
inspection.scattered.functionality.problem.descriptor = Duplicated block is found in multiple places: {0}. Consider consolidating it to improve code organization and maintainability.
inspection.scattered.functionality.use.quickfix = Rename test according to naming convention
